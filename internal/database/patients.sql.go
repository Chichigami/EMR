// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.27.0
// source: patients.sql

package database

import (
	"context"
	"database/sql"
	"time"
)

const createPatient = `-- name: CreatePatient :one
INSERT INTO patients (
    last_name, first_name, middle_name, 
    date_of_birth, sex, gender, social_security_number, 
    pharmacy, email, location_address, zip_code, 
    cell_phone_number, home_phone_number, marital_status, 
    insurance, primary_care_doctor, 
    extra_note)
VALUES(
    $1, $2, $3,
    $4, $5, $6, $7, 
    $8, $9, $10, $11,
    $12, $13, $14,
    $15, $16,
    $17
)
RETURNING chart_id
`

type CreatePatientParams struct {
	LastName             string
	FirstName            string
	MiddleName           sql.NullString
	DateOfBirth          time.Time
	Sex                  string
	Gender               string
	SocialSecurityNumber sql.NullString
	Pharmacy             string
	Email                sql.NullString
	LocationAddress      string
	ZipCode              string
	CellPhoneNumber      sql.NullString
	HomePhoneNumber      sql.NullString
	MaritalStatus        sql.NullString
	Insurance            sql.NullString
	PrimaryCareDoctor    sql.NullString
	ExtraNote            sql.NullString
}

func (q *Queries) CreatePatient(ctx context.Context, arg CreatePatientParams) (sql.NullInt32, error) {
	row := q.db.QueryRowContext(ctx, createPatient,
		arg.LastName,
		arg.FirstName,
		arg.MiddleName,
		arg.DateOfBirth,
		arg.Sex,
		arg.Gender,
		arg.SocialSecurityNumber,
		arg.Pharmacy,
		arg.Email,
		arg.LocationAddress,
		arg.ZipCode,
		arg.CellPhoneNumber,
		arg.HomePhoneNumber,
		arg.MaritalStatus,
		arg.Insurance,
		arg.PrimaryCareDoctor,
		arg.ExtraNote,
	)
	var chart_id sql.NullInt32
	err := row.Scan(&chart_id)
	return chart_id, err
}

const deleteAllPatients = `-- name: DeleteAllPatients :exec
DELETE FROM patients
`

func (q *Queries) DeleteAllPatients(ctx context.Context) error {
	_, err := q.db.ExecContext(ctx, deleteAllPatients)
	return err
}

const deletePatient = `-- name: DeletePatient :exec
DELETE FROM patients
WHERE chart_id = $1
`

func (q *Queries) DeletePatient(ctx context.Context, chartID sql.NullInt32) error {
	_, err := q.db.ExecContext(ctx, deletePatient, chartID)
	return err
}

const getPatient = `-- name: GetPatient :one
SELECT id, created_at, updated_at, last_name, first_name, middle_name, date_of_birth, sex, gender, social_security_number, pharmacy, email, location_address, zip_code, cell_phone_number, home_phone_number, marital_status, chart_id, insurance, primary_care_doctor, extra_note
FROM patients
WHERE chart_id = $1
`

func (q *Queries) GetPatient(ctx context.Context, chartID sql.NullInt32) (Patient, error) {
	row := q.db.QueryRowContext(ctx, getPatient, chartID)
	var i Patient
	err := row.Scan(
		&i.ID,
		&i.CreatedAt,
		&i.UpdatedAt,
		&i.LastName,
		&i.FirstName,
		&i.MiddleName,
		&i.DateOfBirth,
		&i.Sex,
		&i.Gender,
		&i.SocialSecurityNumber,
		&i.Pharmacy,
		&i.Email,
		&i.LocationAddress,
		&i.ZipCode,
		&i.CellPhoneNumber,
		&i.HomePhoneNumber,
		&i.MaritalStatus,
		&i.ChartID,
		&i.Insurance,
		&i.PrimaryCareDoctor,
		&i.ExtraNote,
	)
	return i, err
}
